import net.fabricmc.loom.task.RemapJarTask
plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'checkstyle'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/inscribe.accesswidener")
}

configurations {
    // Determines shaded dependencies
    shade
    developmentElements {
        extendsFrom(implementation, namedElements)
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

    shade(implementation("com.pivovarit:throwing-function:${project.throwing_function_version}"))
    shade(implementation("org.commonmark:commonmark:${project.common_mark_version}"))
    //Underline
    shade(implementation("org.commonmark:commonmark-ext-ins:${project.common_mark_version}"))
    
    // Use JUnit Jupiter for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
    // Store in temporary folder instead of outputting directly
    destinationDirectory = file("${buildDir}/tmp/thinJar")
}

shadowJar {
    // Store in temporary folder instead of outputting directly
    destinationDirectory = file("${buildDir}/tmp/allJar")
    // Only shade dependencies not provided by Minecraft/FAPI/FLoader
    configurations = [project.configurations.shade]
    relocate 'com.pivovarit.function', 'io.github.daomephsta.inscribe.shadow.com.pivovarit.function'
    relocate 'org.commonmark', 'io.github.daomephsta.inscribe.shadow.org.commonmark'

    //Exclude META-INF entries of shaded deps
    exclude('META-INF/**', '**/*.pdn','**/*.bbmodel')
    // include() upsets shadow, so use from() instead
    from('LICENSE.md', 'NOTICE.txt')
    from('licenses') {
        into('licenses')
    }
}

prepareRemapJar {
    dependsOn shadowJar
}

remapJar {
    input = shadowJar.archivePath
}

checkstyle {
    toolVersion '8.44'
    configDirectory = file("$project.projectDir/config/checkstyle")
}

test {
    useJUnitPlatform()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}